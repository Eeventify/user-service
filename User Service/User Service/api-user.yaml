openapi: 3.0.1
info:
  title: User API
  description: An API used for user authentification
  version: v1
paths:
  /Login:
    get:
      tags:
        - Login
      summary: Attempt Login
      description: Attempt a login with given user authentification
      parameters:
        - name: email
          in: query
          description: The email for attempted login
          schema:
            type: string
        - name: password
          in: query
          description: The password for attempted login
          schema:
            type: string
      responses:
        '200':
          description: The login details are correct and an JWT identification token will be returned
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '400':
          description: The given input was invalid
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Invalid login-detail were given
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Login/Register:
    post:
      tags:
        - Login
      summary: Register User
      description: Register a new user account with given user information
      requestBody:
        description: The user-information in the POST body for which to create an account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '200':
          description: The account was created. An authentification token is returned in the body
        '202':
          description: An input is invalid or of the wrong format. What specific input will be given in the body
  /Token/VerifyAuth:
    get:
      tags:
        - Token
      summary: Get User From Auth Token
      description: "Get a user ID from a JWT Authentication token.\r\nThis API call is mainly meant for internal use"
      parameters:
        - name: token
          in: query
          description: JWT Authentication token for which to find a user ID
          schema:
            type: string
      responses:
        '200':
          description: The token is valid and a matching User was found. The ID will be returned
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: An invalid token was given. A reason why will be given in the response body
  /User/Details:
    get:
      tags:
        - User
      summary: Get User Details
      description: Get user details based on a given user ID
      parameters:
        - name: Id
          in: query
          description: The ID of the user
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: User information is returned in Json format
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: User with given ID was not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    RegisterUser:
      type: object
      properties:
        username:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        registrationDate:
          type: string
          format: date-time
      additionalProperties: false